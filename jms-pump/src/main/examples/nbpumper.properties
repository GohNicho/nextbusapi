# 1. Select a single agency from the agencyList XML Feed results (i.e. mbta,
#       staten-island) etc.
# 2. Leave routes empty to take all routes in the given Transit agency. Otherwise
#    if you are only interested in a small number of routes to watch and pump, 
#    then use a CSV (comma separated list) of their Route tags.
# 3. The refresh time is in milliseconds, 300000=5 minutes, 60000=1 min
#
nbpumper.agency=mbta
nbpumper.routes=
# Enable pumping of VehicleLocation and/or Predictions for the given routes
nbpumper.enable.vehiclelocations=true
nbpumper.enable.predictions=true
# The Poll rate of the task scheduler, in milliseconds
nbpumper.pollrate=1000
# The max number of Nextbus XML RPCs per execution pass of the Poller
nbpumper.maxrpcs-per-poll=10
# Refresh NextBus data after 5 mins for both vehicle locations and 10 mins for predictions 
nbpumper.refreshtime.vehiclelocations=300000
nbpumper.refreshtime.predictions=600000
# JMS Time to Live - 3.6E+6 - after 1 hour, JMS will discard these messages...
nbpumper.jms.ttl=3600000
#
# ***** URL to your ActiveMQ Server *****
nbpumper.activemq.endpoint=tcp://winklessness.dyndns-home.com:61616
nbpumper.activemq.username=
nbpumper.activemq.password=
# ***** JMS Type *****
# Either amq_queue, or amq_topic for now. This forces the Spring JMS Adapter to
# resolve to either/other Spring Bean references for these ActiveMQ destinations.
nbpumper.sender_type=amq_topic
# ***** Remote JMS Queue or Topic name to send to *****
# This must match the destination name that you setup on the ActiveMQ server
nbpumper.jms.destination=nextbus